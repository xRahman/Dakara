Create file .git/hooks/pre-commit and put following script in it (I also ran command "chmod a+x .git/hooks/pre-commit" but don't know it it was necessary):



#!/bin/sh

# This is a pre-commit hook that ensures attempts to commit files that are
# are larger than $limit to your _local_ repo fail, with a helpful error message.

# Maximum file size limit in bytes
limit=100000000 # 100 MB
limitInMB=$(( $limit / 10**6 ))

# Move to the repo root so git files paths make sense
repo_root=$( git rev-parse --show-toplevel )
cd $repo_root

empty_tree=$( git hash-object -t tree /dev/null )

if git rev-parse --verify HEAD > /dev/null 2>&1
then
	against=HEAD
else
	against="$empty_tree"
fi

# Set split so that for loop below can handle spaces in file names by splitting on line breaks
IFS='
'

echo "Checking that all staged file are under github's limit of $limitInMB MB..."

shouldFail=false

for file in $( git diff-index --cached --name-only $against ); do
    if test -f "$file"; then
		file_size=$( ls -la $file | awk '{ print $5 }')
		if [ "$file_size" -gt  "$limit" ]; then
		    echo "ERROR: File $file is $(( $file_size / 10**6 )) MB but github only accepts files up to $limitInMB MB"
			shouldFail=true
		fi
	fi
done

if $shouldFail then
    echo Commit aborted
    exit 1;
fi